name: CI/CD Docker Deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
   pull_request:
      branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
      - uses: actions/checkout@v4
  
      # Login to GitHub Container Registry
      - name: Login no GitHub Container Registry
        run: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    
      # Build the Docker image
      - name: Builder Docker image
        run: |
            docker build -t ghcr.io/${{ github.repository }}/backend:latest .

      # Push the Docker image to GitHub Container Registry
      - name: Push image to Container Registry
        run: docker push ghcr.io/${{ github.repository }}/backend:latest

      # Deploy image on self hosted runner
      - name: Deploy image on self hosted runner
        run: |
          docker stop backend || true
          docker rm backend || true
          docker run -e ASPNETCORE_ENVIRONMENT=Production -d --name backend --network prod-network -p 8080:8080  ghcr.io/${{github.repository}}/backend:latest